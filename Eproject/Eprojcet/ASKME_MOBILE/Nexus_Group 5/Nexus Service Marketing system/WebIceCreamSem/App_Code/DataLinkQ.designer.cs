#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ICECREAMPALOR")]
public partial class DataLinkQDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertADMIN(ADMIN instance);
  partial void UpdateADMIN(ADMIN instance);
  partial void DeleteADMIN(ADMIN instance);
  partial void InsertBOOKRECIPE(BOOKRECIPE instance);
  partial void UpdateBOOKRECIPE(BOOKRECIPE instance);
  partial void DeleteBOOKRECIPE(BOOKRECIPE instance);
  partial void InsertCUSTOMER(CUSTOMER instance);
  partial void UpdateCUSTOMER(CUSTOMER instance);
  partial void DeleteCUSTOMER(CUSTOMER instance);
  partial void InsertFEEDBACK(FEEDBACK instance);
  partial void UpdateFEEDBACK(FEEDBACK instance);
  partial void DeleteFEEDBACK(FEEDBACK instance);
  partial void InsertFLAVOR(FLAVOR instance);
  partial void UpdateFLAVOR(FLAVOR instance);
  partial void DeleteFLAVOR(FLAVOR instance);
  partial void InsertORDERDETAIL(ORDERDETAIL instance);
  partial void UpdateORDERDETAIL(ORDERDETAIL instance);
  partial void DeleteORDERDETAIL(ORDERDETAIL instance);
  partial void InsertORDER(ORDER instance);
  partial void UpdateORDER(ORDER instance);
  partial void DeleteORDER(ORDER instance);
  partial void InsertPAYFEE(PAYFEE instance);
  partial void UpdatePAYFEE(PAYFEE instance);
  partial void DeletePAYFEE(PAYFEE instance);
  partial void InsertPAYMENT(PAYMENT instance);
  partial void UpdatePAYMENT(PAYMENT instance);
  partial void DeletePAYMENT(PAYMENT instance);
  #endregion
	
	public DataLinkQDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ICECREAMPALORConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DataLinkQDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataLinkQDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataLinkQDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataLinkQDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<ADMIN> ADMINs
	{
		get
		{
			return this.GetTable<ADMIN>();
		}
	}
	
	public System.Data.Linq.Table<BOOKRECIPE> BOOKRECIPEs
	{
		get
		{
			return this.GetTable<BOOKRECIPE>();
		}
	}
	
	public System.Data.Linq.Table<CUSTOMER> CUSTOMERs
	{
		get
		{
			return this.GetTable<CUSTOMER>();
		}
	}
	
	public System.Data.Linq.Table<FEEDBACK> FEEDBACKs
	{
		get
		{
			return this.GetTable<FEEDBACK>();
		}
	}
	
	public System.Data.Linq.Table<FLAVOR> FLAVORs
	{
		get
		{
			return this.GetTable<FLAVOR>();
		}
	}
	
	public System.Data.Linq.Table<ORDERDETAIL> ORDERDETAILs
	{
		get
		{
			return this.GetTable<ORDERDETAIL>();
		}
	}
	
	public System.Data.Linq.Table<ORDER> ORDERs
	{
		get
		{
			return this.GetTable<ORDER>();
		}
	}
	
	public System.Data.Linq.Table<PAYFEE> PAYFEEs
	{
		get
		{
			return this.GetTable<PAYFEE>();
		}
	}
	
	public System.Data.Linq.Table<PAYMENT> PAYMENTs
	{
		get
		{
			return this.GetTable<PAYMENT>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADMIN")]
public partial class ADMIN : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _AdminId;
	
	private string _AdminName;
	
	private string _UserName;
	
	private string _PassWord;
	
	private string _Email;
	
	private string _Address;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdminIdChanging(int value);
    partial void OnAdminIdChanged();
    partial void OnAdminNameChanging(string value);
    partial void OnAdminNameChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPassWordChanging(string value);
    partial void OnPassWordChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    #endregion
	
	public ADMIN()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int AdminId
	{
		get
		{
			return this._AdminId;
		}
		set
		{
			if ((this._AdminId != value))
			{
				this.OnAdminIdChanging(value);
				this.SendPropertyChanging();
				this._AdminId = value;
				this.SendPropertyChanged("AdminId");
				this.OnAdminIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminName", DbType="NVarChar(100)")]
	public string AdminName
	{
		get
		{
			return this._AdminName;
		}
		set
		{
			if ((this._AdminName != value))
			{
				this.OnAdminNameChanging(value);
				this.SendPropertyChanging();
				this._AdminName = value;
				this.SendPropertyChanged("AdminName");
				this.OnAdminNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(100)")]
	public string UserName
	{
		get
		{
			return this._UserName;
		}
		set
		{
			if ((this._UserName != value))
			{
				this.OnUserNameChanging(value);
				this.SendPropertyChanging();
				this._UserName = value;
				this.SendPropertyChanged("UserName");
				this.OnUserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassWord", DbType="NVarChar(100)")]
	public string PassWord
	{
		get
		{
			return this._PassWord;
		}
		set
		{
			if ((this._PassWord != value))
			{
				this.OnPassWordChanging(value);
				this.SendPropertyChanging();
				this._PassWord = value;
				this.SendPropertyChanged("PassWord");
				this.OnPassWordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(500)")]
	public string Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			if ((this._Address != value))
			{
				this.OnAddressChanging(value);
				this.SendPropertyChanging();
				this._Address = value;
				this.SendPropertyChanged("Address");
				this.OnAddressChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BOOKRECIPE")]
public partial class BOOKRECIPE : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _BId;
	
	private string _BName;
	
	private System.Nullable<double> _Price;
	
	private string _Description;
	
	private string _Author;
	
	private string _Image;
	
	private EntitySet<ORDERDETAIL> _ORDERDETAILs;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBIdChanging(int value);
    partial void OnBIdChanged();
    partial void OnBNameChanging(string value);
    partial void OnBNameChanged();
    partial void OnPriceChanging(System.Nullable<double> value);
    partial void OnPriceChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAuthorChanging(string value);
    partial void OnAuthorChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    #endregion
	
	public BOOKRECIPE()
	{
		this._ORDERDETAILs = new EntitySet<ORDERDETAIL>(new Action<ORDERDETAIL>(this.attach_ORDERDETAILs), new Action<ORDERDETAIL>(this.detach_ORDERDETAILs));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int BId
	{
		get
		{
			return this._BId;
		}
		set
		{
			if ((this._BId != value))
			{
				this.OnBIdChanging(value);
				this.SendPropertyChanging();
				this._BId = value;
				this.SendPropertyChanged("BId");
				this.OnBIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BName", DbType="NVarChar(100)")]
	public string BName
	{
		get
		{
			return this._BName;
		}
		set
		{
			if ((this._BName != value))
			{
				this.OnBNameChanging(value);
				this.SendPropertyChanging();
				this._BName = value;
				this.SendPropertyChanged("BName");
				this.OnBNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float")]
	public System.Nullable<double> Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this.OnPriceChanging(value);
				this.SendPropertyChanging();
				this._Price = value;
				this.SendPropertyChanged("Price");
				this.OnPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="NVarChar(100)")]
	public string Author
	{
		get
		{
			return this._Author;
		}
		set
		{
			if ((this._Author != value))
			{
				this.OnAuthorChanging(value);
				this.SendPropertyChanging();
				this._Author = value;
				this.SendPropertyChanged("Author");
				this.OnAuthorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(50)")]
	public string Image
	{
		get
		{
			return this._Image;
		}
		set
		{
			if ((this._Image != value))
			{
				this.OnImageChanging(value);
				this.SendPropertyChanging();
				this._Image = value;
				this.SendPropertyChanged("Image");
				this.OnImageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BOOKRECIPE_ORDERDETAIL", Storage="_ORDERDETAILs", ThisKey="BId", OtherKey="BId")]
	public EntitySet<ORDERDETAIL> ORDERDETAILs
	{
		get
		{
			return this._ORDERDETAILs;
		}
		set
		{
			this._ORDERDETAILs.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_ORDERDETAILs(ORDERDETAIL entity)
	{
		this.SendPropertyChanging();
		entity.BOOKRECIPE = this;
	}
	
	private void detach_ORDERDETAILs(ORDERDETAIL entity)
	{
		this.SendPropertyChanging();
		entity.BOOKRECIPE = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CUSTOMER")]
public partial class CUSTOMER : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Cid;
	
	private string _CUserName;
	
	private string _CPassWord;
	
	private string _CName;
	
	private System.Nullable<double> _CPhone;
	
	private string _CEmail;
	
	private string _CAddress;
	
	private System.Nullable<double> _AccountNumber;
	
	private EntitySet<ORDER> _ORDERs;
	
	private EntitySet<PAYFEE> _PAYFEEs;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCidChanging(int value);
    partial void OnCidChanged();
    partial void OnCUserNameChanging(string value);
    partial void OnCUserNameChanged();
    partial void OnCPassWordChanging(string value);
    partial void OnCPassWordChanged();
    partial void OnCNameChanging(string value);
    partial void OnCNameChanged();
    partial void OnCPhoneChanging(System.Nullable<double> value);
    partial void OnCPhoneChanged();
    partial void OnCEmailChanging(string value);
    partial void OnCEmailChanged();
    partial void OnCAddressChanging(string value);
    partial void OnCAddressChanged();
    partial void OnAccountNumberChanging(System.Nullable<double> value);
    partial void OnAccountNumberChanged();
    #endregion
	
	public CUSTOMER()
	{
		this._ORDERs = new EntitySet<ORDER>(new Action<ORDER>(this.attach_ORDERs), new Action<ORDER>(this.detach_ORDERs));
		this._PAYFEEs = new EntitySet<PAYFEE>(new Action<PAYFEE>(this.attach_PAYFEEs), new Action<PAYFEE>(this.detach_PAYFEEs));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Cid
	{
		get
		{
			return this._Cid;
		}
		set
		{
			if ((this._Cid != value))
			{
				this.OnCidChanging(value);
				this.SendPropertyChanging();
				this._Cid = value;
				this.SendPropertyChanged("Cid");
				this.OnCidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUserName", DbType="NVarChar(100)")]
	public string CUserName
	{
		get
		{
			return this._CUserName;
		}
		set
		{
			if ((this._CUserName != value))
			{
				this.OnCUserNameChanging(value);
				this.SendPropertyChanging();
				this._CUserName = value;
				this.SendPropertyChanged("CUserName");
				this.OnCUserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPassWord", DbType="NVarChar(100)")]
	public string CPassWord
	{
		get
		{
			return this._CPassWord;
		}
		set
		{
			if ((this._CPassWord != value))
			{
				this.OnCPassWordChanging(value);
				this.SendPropertyChanging();
				this._CPassWord = value;
				this.SendPropertyChanged("CPassWord");
				this.OnCPassWordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CName", DbType="NVarChar(100)")]
	public string CName
	{
		get
		{
			return this._CName;
		}
		set
		{
			if ((this._CName != value))
			{
				this.OnCNameChanging(value);
				this.SendPropertyChanging();
				this._CName = value;
				this.SendPropertyChanged("CName");
				this.OnCNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPhone", DbType="Float")]
	public System.Nullable<double> CPhone
	{
		get
		{
			return this._CPhone;
		}
		set
		{
			if ((this._CPhone != value))
			{
				this.OnCPhoneChanging(value);
				this.SendPropertyChanging();
				this._CPhone = value;
				this.SendPropertyChanged("CPhone");
				this.OnCPhoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CEmail", DbType="NVarChar(100)")]
	public string CEmail
	{
		get
		{
			return this._CEmail;
		}
		set
		{
			if ((this._CEmail != value))
			{
				this.OnCEmailChanging(value);
				this.SendPropertyChanging();
				this._CEmail = value;
				this.SendPropertyChanged("CEmail");
				this.OnCEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAddress", DbType="NVarChar(500)")]
	public string CAddress
	{
		get
		{
			return this._CAddress;
		}
		set
		{
			if ((this._CAddress != value))
			{
				this.OnCAddressChanging(value);
				this.SendPropertyChanging();
				this._CAddress = value;
				this.SendPropertyChanged("CAddress");
				this.OnCAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="Float")]
	public System.Nullable<double> AccountNumber
	{
		get
		{
			return this._AccountNumber;
		}
		set
		{
			if ((this._AccountNumber != value))
			{
				this.OnAccountNumberChanging(value);
				this.SendPropertyChanging();
				this._AccountNumber = value;
				this.SendPropertyChanged("AccountNumber");
				this.OnAccountNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSTOMER_ORDER", Storage="_ORDERs", ThisKey="Cid", OtherKey="CId")]
	public EntitySet<ORDER> ORDERs
	{
		get
		{
			return this._ORDERs;
		}
		set
		{
			this._ORDERs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSTOMER_PAYFEE", Storage="_PAYFEEs", ThisKey="Cid", OtherKey="CId")]
	public EntitySet<PAYFEE> PAYFEEs
	{
		get
		{
			return this._PAYFEEs;
		}
		set
		{
			this._PAYFEEs.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_ORDERs(ORDER entity)
	{
		this.SendPropertyChanging();
		entity.CUSTOMER = this;
	}
	
	private void detach_ORDERs(ORDER entity)
	{
		this.SendPropertyChanging();
		entity.CUSTOMER = null;
	}
	
	private void attach_PAYFEEs(PAYFEE entity)
	{
		this.SendPropertyChanging();
		entity.CUSTOMER = this;
	}
	
	private void detach_PAYFEEs(PAYFEE entity)
	{
		this.SendPropertyChanging();
		entity.CUSTOMER = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FEEDBACK")]
public partial class FEEDBACK : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _FBId;
	
	private string _Sender;
	
	private string _Address;
	
	private string _Phone;
	
	private string _Email;
	
	private string _Title;
	
	private string _Content;
	
	private System.Nullable<bool> _Status;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFBIdChanging(int value);
    partial void OnFBIdChanged();
    partial void OnSenderChanging(string value);
    partial void OnSenderChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    #endregion
	
	public FEEDBACK()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FBId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int FBId
	{
		get
		{
			return this._FBId;
		}
		set
		{
			if ((this._FBId != value))
			{
				this.OnFBIdChanging(value);
				this.SendPropertyChanging();
				this._FBId = value;
				this.SendPropertyChanged("FBId");
				this.OnFBIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sender", DbType="NVarChar(100)")]
	public string Sender
	{
		get
		{
			return this._Sender;
		}
		set
		{
			if ((this._Sender != value))
			{
				this.OnSenderChanging(value);
				this.SendPropertyChanging();
				this._Sender = value;
				this.SendPropertyChanged("Sender");
				this.OnSenderChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(500)")]
	public string Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			if ((this._Address != value))
			{
				this.OnAddressChanging(value);
				this.SendPropertyChanging();
				this._Address = value;
				this.SendPropertyChanged("Address");
				this.OnAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(15)")]
	public string Phone
	{
		get
		{
			return this._Phone;
		}
		set
		{
			if ((this._Phone != value))
			{
				this.OnPhoneChanging(value);
				this.SendPropertyChanging();
				this._Phone = value;
				this.SendPropertyChanged("Phone");
				this.OnPhoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100)")]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(500)")]
	public string Content
	{
		get
		{
			return this._Content;
		}
		set
		{
			if ((this._Content != value))
			{
				this.OnContentChanging(value);
				this.SendPropertyChanging();
				this._Content = value;
				this.SendPropertyChanged("Content");
				this.OnContentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
	public System.Nullable<bool> Status
	{
		get
		{
			return this._Status;
		}
		set
		{
			if ((this._Status != value))
			{
				this.OnStatusChanging(value);
				this.SendPropertyChanging();
				this._Status = value;
				this.SendPropertyChanged("Status");
				this.OnStatusChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FLAVOR")]
public partial class FLAVOR : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _FId;
	
	private string _FProvider;
	
	private string _FName;
	
	private string _FImage;
	
	private string _Ingredient;
	
	private string _Recipe;
	
	private System.Nullable<bool> _TypeFlavor;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFIdChanging(int value);
    partial void OnFIdChanged();
    partial void OnFProviderChanging(string value);
    partial void OnFProviderChanged();
    partial void OnFNameChanging(string value);
    partial void OnFNameChanged();
    partial void OnFImageChanging(string value);
    partial void OnFImageChanged();
    partial void OnIngredientChanging(string value);
    partial void OnIngredientChanged();
    partial void OnRecipeChanging(string value);
    partial void OnRecipeChanged();
    partial void OnTypeFlavorChanging(System.Nullable<bool> value);
    partial void OnTypeFlavorChanged();
    #endregion
	
	public FLAVOR()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int FId
	{
		get
		{
			return this._FId;
		}
		set
		{
			if ((this._FId != value))
			{
				this.OnFIdChanging(value);
				this.SendPropertyChanging();
				this._FId = value;
				this.SendPropertyChanged("FId");
				this.OnFIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FProvider", DbType="NVarChar(100)")]
	public string FProvider
	{
		get
		{
			return this._FProvider;
		}
		set
		{
			if ((this._FProvider != value))
			{
				this.OnFProviderChanging(value);
				this.SendPropertyChanging();
				this._FProvider = value;
				this.SendPropertyChanged("FProvider");
				this.OnFProviderChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FName", DbType="NVarChar(100)")]
	public string FName
	{
		get
		{
			return this._FName;
		}
		set
		{
			if ((this._FName != value))
			{
				this.OnFNameChanging(value);
				this.SendPropertyChanging();
				this._FName = value;
				this.SendPropertyChanged("FName");
				this.OnFNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FImage", DbType="NVarChar(100)")]
	public string FImage
	{
		get
		{
			return this._FImage;
		}
		set
		{
			if ((this._FImage != value))
			{
				this.OnFImageChanging(value);
				this.SendPropertyChanging();
				this._FImage = value;
				this.SendPropertyChanged("FImage");
				this.OnFImageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ingredient", DbType="NVarChar(1000)")]
	public string Ingredient
	{
		get
		{
			return this._Ingredient;
		}
		set
		{
			if ((this._Ingredient != value))
			{
				this.OnIngredientChanging(value);
				this.SendPropertyChanging();
				this._Ingredient = value;
				this.SendPropertyChanged("Ingredient");
				this.OnIngredientChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recipe", DbType="NVarChar(1000)")]
	public string Recipe
	{
		get
		{
			return this._Recipe;
		}
		set
		{
			if ((this._Recipe != value))
			{
				this.OnRecipeChanging(value);
				this.SendPropertyChanging();
				this._Recipe = value;
				this.SendPropertyChanged("Recipe");
				this.OnRecipeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeFlavor", DbType="Bit")]
	public System.Nullable<bool> TypeFlavor
	{
		get
		{
			return this._TypeFlavor;
		}
		set
		{
			if ((this._TypeFlavor != value))
			{
				this.OnTypeFlavorChanging(value);
				this.SendPropertyChanging();
				this._TypeFlavor = value;
				this.SendPropertyChanged("TypeFlavor");
				this.OnTypeFlavorChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ORDERDETAIL")]
public partial class ORDERDETAIL : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _BId;
	
	private int _OId;
	
	private string _Name;
	
	private System.Nullable<System.DateTime> _DateDelivery;
	
	private EntityRef<BOOKRECIPE> _BOOKRECIPE;
	
	private EntityRef<ORDER> _ORDER;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBIdChanging(int value);
    partial void OnBIdChanged();
    partial void OnOIdChanging(int value);
    partial void OnOIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDateDeliveryChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDeliveryChanged();
    #endregion
	
	public ORDERDETAIL()
	{
		this._BOOKRECIPE = default(EntityRef<BOOKRECIPE>);
		this._ORDER = default(EntityRef<ORDER>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BId", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int BId
	{
		get
		{
			return this._BId;
		}
		set
		{
			if ((this._BId != value))
			{
				if (this._BOOKRECIPE.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnBIdChanging(value);
				this.SendPropertyChanging();
				this._BId = value;
				this.SendPropertyChanged("BId");
				this.OnBIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OId", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int OId
	{
		get
		{
			return this._OId;
		}
		set
		{
			if ((this._OId != value))
			{
				if (this._ORDER.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnOIdChanging(value);
				this.SendPropertyChanging();
				this._OId = value;
				this.SendPropertyChanged("OId");
				this.OnOIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDelivery", DbType="Date")]
	public System.Nullable<System.DateTime> DateDelivery
	{
		get
		{
			return this._DateDelivery;
		}
		set
		{
			if ((this._DateDelivery != value))
			{
				this.OnDateDeliveryChanging(value);
				this.SendPropertyChanging();
				this._DateDelivery = value;
				this.SendPropertyChanged("DateDelivery");
				this.OnDateDeliveryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BOOKRECIPE_ORDERDETAIL", Storage="_BOOKRECIPE", ThisKey="BId", OtherKey="BId", IsForeignKey=true)]
	public BOOKRECIPE BOOKRECIPE
	{
		get
		{
			return this._BOOKRECIPE.Entity;
		}
		set
		{
			BOOKRECIPE previousValue = this._BOOKRECIPE.Entity;
			if (((previousValue != value) 
						|| (this._BOOKRECIPE.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._BOOKRECIPE.Entity = null;
					previousValue.ORDERDETAILs.Remove(this);
				}
				this._BOOKRECIPE.Entity = value;
				if ((value != null))
				{
					value.ORDERDETAILs.Add(this);
					this._BId = value.BId;
				}
				else
				{
					this._BId = default(int);
				}
				this.SendPropertyChanged("BOOKRECIPE");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORDER_ORDERDETAIL", Storage="_ORDER", ThisKey="OId", OtherKey="OId", IsForeignKey=true)]
	public ORDER ORDER
	{
		get
		{
			return this._ORDER.Entity;
		}
		set
		{
			ORDER previousValue = this._ORDER.Entity;
			if (((previousValue != value) 
						|| (this._ORDER.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ORDER.Entity = null;
					previousValue.ORDERDETAILs.Remove(this);
				}
				this._ORDER.Entity = value;
				if ((value != null))
				{
					value.ORDERDETAILs.Add(this);
					this._OId = value.OId;
				}
				else
				{
					this._OId = default(int);
				}
				this.SendPropertyChanged("ORDER");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ORDERS")]
public partial class ORDER : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _OId;
	
	private System.Nullable<int> _CId;
	
	private string _Name;
	
	private string _Email;
	
	private string _Address;
	
	private string _ContactDetail;
	
	private System.Nullable<double> _Cost;
	
	private string _PayOption;
	
	private System.Nullable<System.DateTime> _DateOlder;
	
	private System.Nullable<System.DateTime> _DateDelivery;
	
	private EntitySet<ORDERDETAIL> _ORDERDETAILs;
	
	private EntitySet<PAYMENT> _PAYMENTs;
	
	private EntityRef<CUSTOMER> _CUSTOMER;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIdChanging(int value);
    partial void OnOIdChanged();
    partial void OnCIdChanging(System.Nullable<int> value);
    partial void OnCIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnContactDetailChanging(string value);
    partial void OnContactDetailChanged();
    partial void OnCostChanging(System.Nullable<double> value);
    partial void OnCostChanged();
    partial void OnPayOptionChanging(string value);
    partial void OnPayOptionChanged();
    partial void OnDateOlderChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOlderChanged();
    partial void OnDateDeliveryChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDeliveryChanged();
    #endregion
	
	public ORDER()
	{
		this._ORDERDETAILs = new EntitySet<ORDERDETAIL>(new Action<ORDERDETAIL>(this.attach_ORDERDETAILs), new Action<ORDERDETAIL>(this.detach_ORDERDETAILs));
		this._PAYMENTs = new EntitySet<PAYMENT>(new Action<PAYMENT>(this.attach_PAYMENTs), new Action<PAYMENT>(this.detach_PAYMENTs));
		this._CUSTOMER = default(EntityRef<CUSTOMER>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int OId
	{
		get
		{
			return this._OId;
		}
		set
		{
			if ((this._OId != value))
			{
				this.OnOIdChanging(value);
				this.SendPropertyChanging();
				this._OId = value;
				this.SendPropertyChanged("OId");
				this.OnOIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CId", DbType="Int")]
	public System.Nullable<int> CId
	{
		get
		{
			return this._CId;
		}
		set
		{
			if ((this._CId != value))
			{
				if (this._CUSTOMER.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCIdChanging(value);
				this.SendPropertyChanging();
				this._CId = value;
				this.SendPropertyChanged("CId");
				this.OnCIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(500)")]
	public string Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			if ((this._Address != value))
			{
				this.OnAddressChanging(value);
				this.SendPropertyChanging();
				this._Address = value;
				this.SendPropertyChanged("Address");
				this.OnAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactDetail", DbType="NVarChar(500)")]
	public string ContactDetail
	{
		get
		{
			return this._ContactDetail;
		}
		set
		{
			if ((this._ContactDetail != value))
			{
				this.OnContactDetailChanging(value);
				this.SendPropertyChanging();
				this._ContactDetail = value;
				this.SendPropertyChanged("ContactDetail");
				this.OnContactDetailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Float")]
	public System.Nullable<double> Cost
	{
		get
		{
			return this._Cost;
		}
		set
		{
			if ((this._Cost != value))
			{
				this.OnCostChanging(value);
				this.SendPropertyChanging();
				this._Cost = value;
				this.SendPropertyChanged("Cost");
				this.OnCostChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayOption", DbType="NVarChar(100)")]
	public string PayOption
	{
		get
		{
			return this._PayOption;
		}
		set
		{
			if ((this._PayOption != value))
			{
				this.OnPayOptionChanging(value);
				this.SendPropertyChanging();
				this._PayOption = value;
				this.SendPropertyChanged("PayOption");
				this.OnPayOptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOlder", DbType="Date")]
	public System.Nullable<System.DateTime> DateOlder
	{
		get
		{
			return this._DateOlder;
		}
		set
		{
			if ((this._DateOlder != value))
			{
				this.OnDateOlderChanging(value);
				this.SendPropertyChanging();
				this._DateOlder = value;
				this.SendPropertyChanged("DateOlder");
				this.OnDateOlderChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDelivery", DbType="Date")]
	public System.Nullable<System.DateTime> DateDelivery
	{
		get
		{
			return this._DateDelivery;
		}
		set
		{
			if ((this._DateDelivery != value))
			{
				this.OnDateDeliveryChanging(value);
				this.SendPropertyChanging();
				this._DateDelivery = value;
				this.SendPropertyChanged("DateDelivery");
				this.OnDateDeliveryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORDER_ORDERDETAIL", Storage="_ORDERDETAILs", ThisKey="OId", OtherKey="OId")]
	public EntitySet<ORDERDETAIL> ORDERDETAILs
	{
		get
		{
			return this._ORDERDETAILs;
		}
		set
		{
			this._ORDERDETAILs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORDER_PAYMENT", Storage="_PAYMENTs", ThisKey="OId", OtherKey="OId")]
	public EntitySet<PAYMENT> PAYMENTs
	{
		get
		{
			return this._PAYMENTs;
		}
		set
		{
			this._PAYMENTs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSTOMER_ORDER", Storage="_CUSTOMER", ThisKey="CId", OtherKey="Cid", IsForeignKey=true)]
	public CUSTOMER CUSTOMER
	{
		get
		{
			return this._CUSTOMER.Entity;
		}
		set
		{
			CUSTOMER previousValue = this._CUSTOMER.Entity;
			if (((previousValue != value) 
						|| (this._CUSTOMER.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._CUSTOMER.Entity = null;
					previousValue.ORDERs.Remove(this);
				}
				this._CUSTOMER.Entity = value;
				if ((value != null))
				{
					value.ORDERs.Add(this);
					this._CId = value.Cid;
				}
				else
				{
					this._CId = default(Nullable<int>);
				}
				this.SendPropertyChanged("CUSTOMER");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_ORDERDETAILs(ORDERDETAIL entity)
	{
		this.SendPropertyChanging();
		entity.ORDER = this;
	}
	
	private void detach_ORDERDETAILs(ORDERDETAIL entity)
	{
		this.SendPropertyChanging();
		entity.ORDER = null;
	}
	
	private void attach_PAYMENTs(PAYMENT entity)
	{
		this.SendPropertyChanging();
		entity.ORDER = this;
	}
	
	private void detach_PAYMENTs(PAYMENT entity)
	{
		this.SendPropertyChanging();
		entity.ORDER = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PAYFEES")]
public partial class PAYFEE : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _PayFeesID;
	
	private System.Nullable<int> _CId;
	
	private System.Nullable<System.DateTime> _DatePay;
	
	private string _TypeFees;
	
	private EntityRef<CUSTOMER> _CUSTOMER;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPayFeesIDChanging(int value);
    partial void OnPayFeesIDChanged();
    partial void OnCIdChanging(System.Nullable<int> value);
    partial void OnCIdChanged();
    partial void OnDatePayChanging(System.Nullable<System.DateTime> value);
    partial void OnDatePayChanged();
    partial void OnTypeFeesChanging(string value);
    partial void OnTypeFeesChanged();
    #endregion
	
	public PAYFEE()
	{
		this._CUSTOMER = default(EntityRef<CUSTOMER>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayFeesID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int PayFeesID
	{
		get
		{
			return this._PayFeesID;
		}
		set
		{
			if ((this._PayFeesID != value))
			{
				this.OnPayFeesIDChanging(value);
				this.SendPropertyChanging();
				this._PayFeesID = value;
				this.SendPropertyChanged("PayFeesID");
				this.OnPayFeesIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CId", DbType="Int")]
	public System.Nullable<int> CId
	{
		get
		{
			return this._CId;
		}
		set
		{
			if ((this._CId != value))
			{
				if (this._CUSTOMER.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCIdChanging(value);
				this.SendPropertyChanging();
				this._CId = value;
				this.SendPropertyChanged("CId");
				this.OnCIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatePay", DbType="DateTime")]
	public System.Nullable<System.DateTime> DatePay
	{
		get
		{
			return this._DatePay;
		}
		set
		{
			if ((this._DatePay != value))
			{
				this.OnDatePayChanging(value);
				this.SendPropertyChanging();
				this._DatePay = value;
				this.SendPropertyChanged("DatePay");
				this.OnDatePayChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeFees", DbType="NVarChar(100)")]
	public string TypeFees
	{
		get
		{
			return this._TypeFees;
		}
		set
		{
			if ((this._TypeFees != value))
			{
				this.OnTypeFeesChanging(value);
				this.SendPropertyChanging();
				this._TypeFees = value;
				this.SendPropertyChanged("TypeFees");
				this.OnTypeFeesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSTOMER_PAYFEE", Storage="_CUSTOMER", ThisKey="CId", OtherKey="Cid", IsForeignKey=true)]
	public CUSTOMER CUSTOMER
	{
		get
		{
			return this._CUSTOMER.Entity;
		}
		set
		{
			CUSTOMER previousValue = this._CUSTOMER.Entity;
			if (((previousValue != value) 
						|| (this._CUSTOMER.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._CUSTOMER.Entity = null;
					previousValue.PAYFEEs.Remove(this);
				}
				this._CUSTOMER.Entity = value;
				if ((value != null))
				{
					value.PAYFEEs.Add(this);
					this._CId = value.Cid;
				}
				else
				{
					this._CId = default(Nullable<int>);
				}
				this.SendPropertyChanged("CUSTOMER");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PAYMENT")]
public partial class PAYMENT : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _PId;
	
	private System.Nullable<int> _OId;
	
	private string _PName;
	
	private System.Nullable<System.DateTime> _DatePay;
	
	private EntityRef<ORDER> _ORDER;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPIdChanging(int value);
    partial void OnPIdChanged();
    partial void OnOIdChanging(System.Nullable<int> value);
    partial void OnOIdChanged();
    partial void OnPNameChanging(string value);
    partial void OnPNameChanged();
    partial void OnDatePayChanging(System.Nullable<System.DateTime> value);
    partial void OnDatePayChanged();
    #endregion
	
	public PAYMENT()
	{
		this._ORDER = default(EntityRef<ORDER>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int PId
	{
		get
		{
			return this._PId;
		}
		set
		{
			if ((this._PId != value))
			{
				this.OnPIdChanging(value);
				this.SendPropertyChanging();
				this._PId = value;
				this.SendPropertyChanged("PId");
				this.OnPIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OId", DbType="Int")]
	public System.Nullable<int> OId
	{
		get
		{
			return this._OId;
		}
		set
		{
			if ((this._OId != value))
			{
				if (this._ORDER.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnOIdChanging(value);
				this.SendPropertyChanging();
				this._OId = value;
				this.SendPropertyChanged("OId");
				this.OnOIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PName", DbType="NVarChar(100)")]
	public string PName
	{
		get
		{
			return this._PName;
		}
		set
		{
			if ((this._PName != value))
			{
				this.OnPNameChanging(value);
				this.SendPropertyChanging();
				this._PName = value;
				this.SendPropertyChanged("PName");
				this.OnPNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatePay", DbType="Date")]
	public System.Nullable<System.DateTime> DatePay
	{
		get
		{
			return this._DatePay;
		}
		set
		{
			if ((this._DatePay != value))
			{
				this.OnDatePayChanging(value);
				this.SendPropertyChanging();
				this._DatePay = value;
				this.SendPropertyChanged("DatePay");
				this.OnDatePayChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORDER_PAYMENT", Storage="_ORDER", ThisKey="OId", OtherKey="OId", IsForeignKey=true)]
	public ORDER ORDER
	{
		get
		{
			return this._ORDER.Entity;
		}
		set
		{
			ORDER previousValue = this._ORDER.Entity;
			if (((previousValue != value) 
						|| (this._ORDER.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ORDER.Entity = null;
					previousValue.PAYMENTs.Remove(this);
				}
				this._ORDER.Entity = value;
				if ((value != null))
				{
					value.PAYMENTs.Add(this);
					this._OId = value.OId;
				}
				else
				{
					this._OId = default(Nullable<int>);
				}
				this.SendPropertyChanged("ORDER");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
